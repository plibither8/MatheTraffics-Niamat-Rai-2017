.page#p1.flex

	.info.flex
		h1 Traffic and its impacts

		ul

			li Time delays
			li Unnecessary stress
			li Road rage
			li Higher fuel consumption
			li Problems in provision of emergency verhicles

	.buttons.flex

		.down.flex

			a.flex(data-scroll href="#p2") ∨

.page#p2.flex
	
	.info.flex

		h1 Our Solution

		h1.title Mathe
			span Traffics

		p.caption
			| A Personalized Mathematical Model of Macroscopic Traffic Flow

	.buttons.flex

		.up

			a.flex(data-scroll href="#p1") ∧

		.down.flex

			a.flex(data-scroll href="#p3") ∨

.page#p3.flex

	.info.flex

		h1 Assumptions

		ul

			li Every driver takes decisions with respect to their best interests
			li Absence of random and unpredictable events
			li Synchronised and ideal traffic signals

	.buttons.flex

		.up

			a.flex(data-scroll href="#p2") ∧

		.down.flex

			a.flex(data-scroll href="#p4") ∨

.page#p4.flex

	.info.flex

		h1 Hypothesis

		p
			| It is possible to use mathematical analysis to find the optimum route and minimum time delay for a route from any two points A and B taking into account traffic density, route distances and traffic signals. 

	.buttons.flex

		.up

			a.flex(data-scroll href="#p3") ∧

		.down.flex

			a.flex(data-scroll href="#p5") ∨

.page#p5.flex

	.info.flex

		h1 Working Method

		p The three factors the model aims to assess are:

		br

		ol

			li(style="list-style-type:decimal") Minimizing distance
			li(style="list-style-type:decimal") Analysis of traffic density and minimizing time delay
			li(style="list-style-type:decimal") Analysis of traffic lights and optimum speed

	.buttons.flex

		.up

			a.flex(data-scroll href="#p4") ∧

		.down.flex

			a.flex(data-scroll href="#p6") ∨

.page#p6.flex

	.info.flex

		h1 Minimizing Distance of Travel

		div.equation.flex

			div.lhs
				| speed

			div.equals
				| =

			div.rhs

				div.frac
					span distance
					span.symbol
					span.bottom time

		div.equation.flex

			div.lhs
				| v

			div.equals
				| =

			div.rhs

				div.frac
					span s
					span.symbol
					span.bottom t

		div.equation.flex

			div.lhs
				| t

			div.equals
				| =

			div.rhs

				div.frac
					span s
					span.symbol
					span.bottom v

		div.equation.flex

			div.lhs
				| t

			div.equals
				| &alpha;

			div.rhs

				| s

		p As distance decreases, time also decreases

	.buttons.flex

		.up

			a.flex(data-scroll href="#p5") ∧

		.down.flex

			a.flex(data-scroll href="#p7") ∨

.page#p7.flex

	.info.flex

		h1 Traffic Density

		img(src="./img/network.png")

	.buttons.flex

		.up

			a.flex(data-scroll href="#p6") ∧

		.down.flex

			a.flex(data-scroll href="#p8") ∨

.page#p8.flex

	.info.flex

		.images.flex

			.network.flex

				img(src="./img/network.png")

			.matrix.flex

				img(src="./img/matrix-1.png")
				img(src="./img/d-matrix-theory.png")
				img(src="./img/l-matrix-theory.png")

	.buttons.flex

		.up

			a.flex(data-scroll href="#p7") ∧

		.down.flex

			a.flex(data-scroll href="#p9") ∨

.page#p9.flex

	.info.flex

		h1 Working Example

		img(src="./img/map1.png")

	.buttons.flex

		.up

			a.flex(data-scroll href="#p8") ∧

		.down.flex

			a.flex(data-scroll href="#p10") ∨

.page#p10.flex

	.info.flex

		h1 Working Example

		img(src="./img/map2.png")

	.buttons.flex

		.up

			a.flex(data-scroll href="#p9") ∧

		.down.flex

			a.flex(data-scroll href="#p11") ∨

.page#p11.flex

	.info.flex

		.images.flex

			img(src="./img/map2.png")

		.matrix.flex

				img(src="./img/a-matrix-example.png")
				img(src="./img/d-matrix-example.png")
				img(src="./img/l-matrix-e1.png")

	.buttons.flex

		.up

			a.flex(data-scroll href="#p10") ∧

		.down.flex

			a.flex(data-scroll href="#p12") ∨

.page#p12.flex

	.info.flex

		h1 Traffic Density Data

		include table.pug

	.buttons.flex

		.up

			a.flex(data-scroll href="#p11") ∧

		.down.flex

			a.flex(data-scroll href="#p13") ∨

.page#p13.flex

	.info.flex

		img(src="./img/x-r.png")

	.buttons.flex

		.up

			a.flex(data-scroll href="#p12") ∧

		.down.flex

			a.flex(data-scroll href="#p13b") ∨

.page#p13b.flex

	.info.flex

		p
			| Relation between
			em &nbsp;average traffic density&nbsp;
			| and
			em &nbsp;maximum average speed:

		div.equation.flex

			div.lhs
				| v

			div.equals
				| =

			div.rhs

				| (-2 &times; 10
				sup -10
				| ) x
				sup 3
				| &nbsp;+ (3 &times; 10
				sup -6
				| ) x
				sup 2
				| &nbsp;- 0.061x + 51

	.buttons.flex

		.up

			a.flex(data-scroll href="#p13") ∧

		.down.flex

			a.flex(data-scroll href="#p14") ∨



.page#p14.flex

	.info.flex

		h1 Example 1 at 10 AM

		.up.flex

			img(src="./img/l-matrix-e1.png")
			img(src="./img/x-r.png")

		.down.flex

			.results

				li Route 1 : 1440 cars/hour
				li Route 2 : 2051.61 cars/hour
				li Route 3 : 1200 cars/hour

			.results

				li v
					sub 1
					| &nbsp;: 33.58 km/h
				li v
					sub 2
					| &nbsp;: 29.08 km/h
				li v
					sub 3
					| &nbsp;: 35.78 km/h

			.results

				li t
					sub 1
					| &nbsp;: 8.93 minutes
				li t
					sub 2
					| &nbsp;: 12.79 minutes
				li t
					sub 3
					| &nbsp;: 16.1 minutes

	.buttons.flex

		.up

			a.flex(data-scroll href="#p13b") ∧

		.down.flex

			a.flex(data-scroll href="#p15") ∨

.page#p15.flex

	.info.flex

		h1 Example 2 at 12 Noon

		.up.flex

			img(src="./img/l-matrix-e2.png")
			img(src="./img/x-r.png")

		.down.flex

			.results

				li Route 1 : 2736 cars/hour
				li Route 2 : 1238.71 cars/hour
				li Route 3 : 1450 cars/hour

			.results

				li v
					sub 1
					| &nbsp;: 25.58 km/h
				li v
					sub 2
					| &nbsp;: 35.40 km/h
				li v
					sub 3
					| &nbsp;: 33.50 km/h

			.results

				li t
					sub 1
					| &nbsp;: 11.73 minutes
				li t
					sub 2
					| &nbsp;: 10.55 minutes
				li t
					sub 3
					| &nbsp;: 17.2 minutes

	.buttons.flex

		.up

			a.flex(data-scroll href="#p14") ∧

		.down.flex

			a.flex(data-scroll href="#p16") ∨
	
.page#p16.flex

	.info.flex

		h1 Analysis of Traffic Signals at an Optimum Speed

		p What we know:

		ul

			li Distance between two consecutive traffic lights
			li Time each traffic light is red for
			li What values of 
				em(style="font-family:serif") v&nbsp;
				| would be there so that the car can pass through the maximum number of traffic signals without facing a red light?

	.buttons.flex

		.up

			a.flex(data-scroll href="#p15") ∧

		.down.flex

			a.flex(data-scroll href="#p17") ∨

.page#p17.flex

	.info.flex

		h1 The Solution

		img(src="./img/graph.png")

	.buttons.flex

		.up

			a.flex(data-scroll href="#p16") ∧

		.down.flex

			a.flex(data-scroll href="#p18") ∨

.page#p18.flex

	.info.flex

		h1 Example 1 at 10AM

		.up.flex

			.results

				li v
					sub 1
					| &nbsp;: 33.58 km/h
				li v
					sub 2
					| &nbsp;: 29.08 km/h
				li v
					sub 3
					| &nbsp;: 35.78 km/h

			img(src="./img/graph10.png")

		.down

			p Since the maximum average speed is 
				span(style="color: #46abe0") 33.58 km/h,
			p The optimum speed in this case would be 
				span(style="color: #46abe0") 27 km/h

	.buttons.flex

		.up

			a.flex(data-scroll href="#p17") ∧

		.down.flex

			a.flex(data-scroll href="#p19") ∨

.page#p19.flex

	.info.flex

		h1 Example 2 at 12 Noon

		.up.flex

			.results

				li v
					sub 1
					| &nbsp;: 25.58 km/h
				li v
					sub 2
					| &nbsp;: 35.40 km/h
				li v
					sub 3
					| &nbsp;: 33.50 km/h

			img(src="./img/graph12.png")

		.down

			p Since the maximum average speed is 
				span(style="color: #46abe0") 35.4 km/h,
			p The optimum speed in this case would be 
				span(style="color: #46abe0") 35 km/h

	.buttons.flex

		.up

			a.flex(data-scroll href="#p18") ∧

		.down.flex

			a.flex(data-scroll href="#program") ∨


section.program#program

	include ./program.pug


.page#p21.flex

	.info.flex

		h1 Applications

		ul

			li Reduction in congestion and time delay
			li Rapid provision of emergency services
			li Applications in other congestion problems with networks

	.buttons.flex

		.up

			a.flex(data-scroll href="#start") ∧